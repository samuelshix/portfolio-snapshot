name: CI/CD Pipeline

on:
  push:
    branches: [ develop, main ]
  pull_request:
    branches: [ main ]

jobs:
  test-backend:
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres:latest
        env:
          POSTGRES_USER: test
          POSTGRES_PASSWORD: test
          POSTGRES_DB: test_db
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
      - uses: actions/checkout@v3
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'
          cache: 'npm'
          cache-dependency-path: backend/package-lock.json

      - name: Backend Tests
        run: |
          cd backend
          npm install
          npx prisma generate
          npx prisma migrate deploy
          npm test
        env:
          DATABASE_URL: postgresql://test:test@localhost:5432/test_db
          USE_MOCK_DATA: "true"

  test-frontend:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'
          cache: 'npm'
          cache-dependency-path: frontend/package-lock.json

      - name: Frontend Build Test
        run: |
          cd frontend
          npm install
          npm run build
        env:
          CI: false
          REACT_APP_API_BASE_URL: ${{ secrets.API_BASE_URL }}

  deploy:
    needs: [test-backend, test-frontend]
    if: github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'

      # Deploy Frontend to Vercel
      - name: Deploy Frontend to Vercel
        uses: amondnet/vercel-action@v20
        with:
          vercel-token: ${{ secrets.VERCEL_TOKEN }}
          vercel-org-id: ${{ secrets.VERCEL_ORG_ID}}
          vercel-project-id: ${{ secrets.VERCEL_PROJECT_ID}}
          vercel-args: '--prod'
          working-directory: ./frontend

      # Deploy Backend to Railway
      - name: Install Railway
        run: npm i -g @railway/cli

      - name: Deploy Backend to Railway
        run: |
          cd backend
          npm install --legacy-peer-deps
          npx prisma generate
          npx prisma migrate deploy
          railway up --service token-retrieval-service
        env:
          RAILWAY_TOKEN: ${{ secrets.RAILWAY_TOKEN }}
          DATABASE_URL: ${{ secrets.DATABASE_URL }}
          USE_MOCK_DATA: ${{ env.USE_MOCK_DATA }}